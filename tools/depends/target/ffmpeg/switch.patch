--- configure
+++ configure
@@ -970,7 +970,7 @@ test_as(){
     log test_as "$@"
     cat > $TMPS
     log_file $TMPS
-    test_cmd $as $CPPFLAGS $ASFLAGS "$@" $AS_C $(as_o $TMPO) $TMPS
+    test_cmd $as $ASFLAGS "$@" $AS_C $(as_o $TMPO) $TMPS
 }
 
 x86asm_o(){
@@ -2119,7 +2119,6 @@ SYSTEM_FUNCS="
     MapViewOfFile
     memalign
     mkstemp
-    mmap
     mprotect
     nanosleep
     PeekNamedPipe
--- ffbuild/common.mak
+++ ffbuild/common.mak
@@ -35,7 +35,9 @@ CFLAGS     += $(ECFLAGS)
 CCFLAGS     = $(CPPFLAGS) $(CFLAGS)
 OBJCFLAGS  += $(EOBJCFLAGS)
 OBJCCFLAGS  = $(CPPFLAGS) $(CFLAGS) $(OBJCFLAGS)
-ASFLAGS    := $(CPPFLAGS) $(ASFLAGS)
+# HACK: Don't implicitly include header defined in CPPFLAGS (the assembler doesn't like it)
+ASFLAGS    := $(subst -include /opt/devkitpro/libnx/include/switch.h,,$(CPPFLAGS)) $(ASFLAGS)
+
 CXXFLAGS   := $(CPPFLAGS) $(CFLAGS) $(CXXFLAGS)
 X86ASMFLAGS += $(IFLAGS:%=%/) -I$(<D)/ -Pconfig.asm
 NVCCFLAGS  += -ptx
--- libavfilter/vf_drawtext.c
+++ libavfilter/vf_drawtext.c
@@ -37,7 +37,9 @@
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
+#ifndef __SWITCH__
 #include <fenv.h>
+#endif
 
 #if CONFIG_LIBFONTCONFIG
 #include <fontconfig/fontconfig.h>
@@ -1038,12 +1040,16 @@ static int func_eval_expr_int_format(AVFilterContext *ctx, AVBPrint *bp,
         }
     }
 
+#ifndef __SWITCH__
     feclearexcept(FE_ALL_EXCEPT);
+#endif
     intval = res;
+#ifndef __SWITCH__
     if ((ret = fetestexcept(FE_INVALID|FE_OVERFLOW|FE_UNDERFLOW))) {
         av_log(ctx, AV_LOG_ERROR, "Conversion of floating-point result to int failed. Control register: 0x%08x. Conversion result: %d\n", ret, intval);
         return AVERROR(EINVAL);
     }
+#endif
 
     if (argc == 3)
         av_strlcatf(fmt_str, sizeof(fmt_str), "0%u", positions);
--- libavutil/error.c
+++ libavutil/error.c
@@ -60,7 +60,7 @@ static const struct error_entry error_entries[] = {
     { ERROR_TAG(HTTP_NOT_FOUND),     "Server returned 404 Not Found"           },
     { ERROR_TAG(HTTP_OTHER_4XX),     "Server returned 4XX Client Error, but not one of 40{0,1,3,4}" },
     { ERROR_TAG(HTTP_SERVER_ERROR),  "Server returned 5XX Server Error reply" },
-#if !HAVE_STRERROR_R
+#if !0
     { EERROR_TAG(E2BIG),             "Argument list too long" },
     { EERROR_TAG(EACCES),            "Permission denied" },
     { EERROR_TAG(EAGAIN),            "Resource temporarily unavailable" },
@@ -116,7 +116,7 @@ int av_strerror(int errnum, char *errbuf, size_t errbuf_size)
     if (entry) {
         av_strlcpy(errbuf, entry->str, errbuf_size);
     } else {
-#if HAVE_STRERROR_R
+#if 0
         ret = AVERROR(strerror_r(AVUNERROR(errnum), errbuf, errbuf_size));
 #else
         ret = -1;
--- libavutil/mem.c
+++ libavutil/mem.c
@@ -82,7 +82,7 @@ void *av_malloc(size_t size)
     if (size > (max_alloc_size - 32))
         return NULL;
 
-#if HAVE_POSIX_MEMALIGN
+#if 0
     if (size) //OS X on SDK 10.6 has a broken posix_memalign implementation
     if (posix_memalign(&ptr, ALIGN, size))
         ptr = NULL;
